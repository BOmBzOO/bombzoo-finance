version: '3.8'

services:
  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
  #     - TZ=Asia/Seoul
  #   ports:
  #     - ${POSTGRES_PORT:-5432}:5432
  #   restart: always
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data



  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
  #     - TZ=Asia/Seoul
  #   ports:
  #     - ${PGADMIN_PORT:-5050}:80
  #   restart: always
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres


  backend:
    stdin_open: true
    container_name: backtend
    # image: node:latest
    # volumes:
    #  - .:/app
    build:
      context: backend/.
      dockerfile: Dockerfile
    env_file:
      - backend/.env
    # environment:
    #   - POSTGRES_HOST=${POSTGRES_HOST}
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DB}
    #   - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - 5000:5000
    restart: on-failure
    # depends_on:
    #   - postgres
    # command: ["bash", "-c", "/app/wait-for-it.sh ${POSTGRES_HOST} ${POSTGRES_PORT} npx prisma db push && npm run dev -- --port=3000"]
    command: ["bash", "-c", "yarn typeorm migration:run && yarn dev"]


  frontend:
    stdin_open: true
    container_name: frontend
    # image: node:latest
    # volumes:
    #  - .:/app
    build:
      context: frontend/.
      dockerfile: Dockerfile
    env_file:
      - frontend/.env
    # environment:
    #   - POSTGRES_HOST=${POSTGRES_HOST}
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DB}
    #   - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - 3000:3000
    restart: on-failure
    # depends_on:
    #   - postgres
    # command: ["bash", "-c", "/app/wait-for-it.sh ${POSTGRES_HOST} ${POSTGRES_PORT} npx prisma db push && npm run dev -- --port=3000"]
    command: ["bash", "-c", "yarn build && yarn start"]


# volumes:
  # postgres-data:
  # pgadmin-data:
  # frontend-data:
  # backend-data: